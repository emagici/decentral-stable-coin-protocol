USDx Release Notes.

# 2019.06.27
1). Truncate amount with decimal larger than 18.
2). Better naming.

# 2019.06.24
1). Do not track ERC20 function return value.
2). Remove deprecated contracts.

# 2019.06.19
1). Split DFProtocol.sol and DFEngine.sol, add DFProtocolView.sol and DFSetting.sol for the deploying gas sake;
2). To solve the problem of decimal of collateral tokens, add wrapper token, i.e. x-tokens (e.g. DAI -> xDAI ) for each token. Uses wrappedTokens (DSWrappedToken.sol) instead of collateral tokens in â€˜sectionâ€? Do wrapping when deposit collateral tokens, and do unwrapping when destroy USDx. Colllateral tokens lock in contract DFPool, and x-tokens store in contract DFPool(pending minting) and DFCollateral(minted);
3). DSMath.sol: add pow();
4). DFEngine.sol: remove claimAmount function (deprecated);
5). DFEngine.sol(line 173): Fix minimal destroy amount checking;
6). DFEngine.sol(line 218): Burn userâ€™s USDx directly, do not transfer to contract in the first place;
7). DFEngine.sol(line 225): Add oneClickMinting function.
8). DFCollateral.sol, DFPool.sol: Add approveToEngine function to approve wrapped token to contract DFEngine;
9). DFStore.sol(line 20): Add wrappedTokens to record relationship between collateral tokens and wrapper tokens.
A). DFStore.sol, line 145:163: Better arguments checking in _setSection().
B). DSToken.sol: merge contract DFToken and USDx to DSToken.
C). DFEngine.sol, DFStore.sol: fix checkUSDXTotalAndColTotal to avoid Dos attack (proposed by PeckShield).
D). DFUpgrader.sol, line 30: add auth to requestImplChange to avoid race condition attack (proposed by PeckShield).

# 2019.06.11
Second version for audit.
1. fix weight precision in setBackupSection (DFStore.sol, line 187).
2. fix "require(_remain > 0)" bug in claimAmount.(DFEngine.sol,line 183).
3. add "oneClickMinting" method(DFEngine.sol,line 432~457; DFProtocol, line 72~75; DFPool.sol, line 44-52).
4. fix "withdraw fee" issue in withdraw function(DFEngine.sol,line 157).
5. replace +/- with safe math in serval places(DFEngine.sol).
6. fix issue in getCollaterMaxClaim and getWithdrawBalances, use minted token list instead of current token list(DFEngine.sol, line 371,398).
7. use .env to deploy testnet. (audit free)
8. serval improvements, including "add missing view modifier to get function", "better variable naming", etc.

# 2019.06.02
First version for audit.
1. release all functions for the first time;
2. deposit/claim/withdraw/destroy/section;
